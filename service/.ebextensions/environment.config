# Configures nginx to accept HTTPS traffic.  Generates a cert via letsencrypt
# and sets up a cron job to keep the cert updated.

Resources:
  # Allow traffic on port 443.
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

container_commands:
  # Installing epel-release via "packages" no longer supported in Amazon Linux 2
  00_install_amazon_linux_extras_for_epel_packages:
    command: |
      sudo amazon-linux-extras install epel
  10_stop_nginx:
    command: |
      sudo systemctl stop nginx
  20_install_certbot:
    command: |
      sudo yum -q -y install python37 python37-pip python37-libs python37-tools python37-virtualenv
      sudo python3 -m pip install --upgrade pip
      sudo python3 -m pip install certbot
  30_install_certificate:
    command: |
      sudo /usr/local/bin/certbot certonly --non-interactive --email ${EMAIL} --agree-tos --standalone --domains randomactsofkinase.org -d www.randomactsofkinase.org --keep-until-expiring
  40_restart_nginx:
    command: |
      sudo systemctl start nginx
  50_setup_renewal_cronjob:
    command: '(sudo crontab -l ; sudo echo ''0 6 * * * /usr/local/bin/certbot renew --standalone --pre-hook "sudo systemctl stop nginx" --post-hook "sudo systemctl start nginx" --force-renew'') | sudo crontab -'
  # Execute bit isn't always set when zipping and deploying, so just make sure here
  60_deploy_hook_permissions:
    command: |
      sudo find .platform/ -type f -name '*.sh' -exec chmod -R 755 {} \;
      sudo find /var/app/staging/.platform/ -type f -name '*.sh' -exec chmod -R 755 {} \;
